include:
  - project: 'seller/finance/pipeline'
    ref: master
    file: 'template.sox.gitlab-ci.yml'

.only: &only
  only:
    - master
    - /^hotfix.*$/

.only_except_skip_ci: &only_except_skip_ci
  <<: *only
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /skip-ci/i

.only_except_skip_ci_allow_failure: &only_except_skip_ci_allow_failure
  <<: *only
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /skip-ci/i
  allow_failure: true

.only_except_skip_ci_test: &only_except_skip_ci_test
  <<: *only
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /skip-ci/i
      - $CI_COMMIT_MESSAGE =~ /skip-test/i

.only_except_skip_ci_manual: &only_except_skip_ci_manual
  <<: *only_except_skip_ci
  when: manual
  allow_failure: false

variables:
  VERSION: $CI_COMMIT_SHORT_SHA
  DOCKER_IMAGE: $GITLAB_REGISTRY_HOST/$CI_PROJECT_PATH:$CI_COMMIT_SHORT_SHA
  DOCKER_IMAGE_RELEASE: $GITLAB_REGISTRY_HOST/$CI_PROJECT_PATH:release-$CI_COMMIT_SHORT_SHA

stages:
  - QA 🕵🏻‍♀️
  - Build 📦
  - Security Gates 🛡︎
  - Deploy PREPROD 🔫
  - Retag 🏷
  - UAT ✅
  - Deploy MARS PROD 🚀

Test:
  extends: .test-mvn-jdk-17

SonarQube:
  extends: .analyze-mvn-jdk-17

Image:
  extends: .build

Retag:
  stage: Retag 🏷
  image: registry.trendyol.com/platform/base/image/docker:19.03.5
  when: manual
  services:
    - registry.trendyol.com/platform/base/image/docker:19.03.5-dind
  variables:
    DOCKER_HOST: "tcp://localhost:2375"
    DOCKER_TLS_CERTDIR: ""
  <<: *only
  <<: *only_except_skip_ci
  script: >
    docker login -u $GITLAB_REGISTRY_USER -p $GITLAB_REGISTRY_PASS $GITLAB_REGISTRY_HOST;
    docker pull -q $DOCKER_IMAGE_RELEASE && exit 0;
    docker pull $DOCKER_IMAGE;
    docker tag $DOCKER_IMAGE $DOCKER_IMAGE_RELEASE;
    docker push $DOCKER_IMAGE_RELEASE;
    docker container prune -f;
    docker rmi -f $DOCKER_IMAGE $DOCKER_IMAGE_RELEASE

Check:
  stage: UAT ✅
  extends: .check_uat
  variables:
    TASK_PREFIX: "SF-"
    TASK_STATUSES: "closed,released,done" # default "closed,done,resolved

Security Gates:
  extends: .security-gates
  stage: Security Gates 🛡︎

Deploy QA:
  extends: .deploy_qa
  variables:
    REPLICA: 1
    LIMIT_CPU: 1
    LIMIT_MEMORY: 500Mi
    REQUEST_CPU: 75m
    REQUEST_MEMORY: 75Mi
    PROMETHEUS_ENABLED: 'false'

Deploy SELLER Stage:
  extends: .deploy_stage_1seller_idc
  variables:
    REPLICA: 1
    LIMIT_CPU: 1
    LIMIT_MEMORY: 500Mi
    REQUEST_CPU: 75m
    REQUEST_MEMORY: 75Mi
    PROMETHEUS_ENABLED: 'false'

Deploy P1-1Mars Prod:
  extends: .deploy_prod_p1_1mplc_mars
  variables:
    REPLICA: 1
    LIMIT_CPU: 1
    LIMIT_MEMORY: 1000Mi
    REQUEST_CPU: 50m
    REQUEST_MEMORY: 50Mi
    PROMETHEUS_ENABLED: 'false'

Deploy P1-2Mars Prod:
  extends: .deploy_prod_p1_2mplc_mars
  variables:
    REPLICA: 1
    LIMIT_CPU: 1
    LIMIT_MEMORY: 1000Mi
    REQUEST_CPU: 50m
    REQUEST_MEMORY: 50Mi
    PROMETHEUS_ENABLED: 'false'

Deploy P1-3Mars Prod:
  extends: .deploy_prod_p1_3mplc_mars
  variables:
    REPLICA: 1
    LIMIT_CPU: 1
    LIMIT_MEMORY: 1000Mi
    REQUEST_CPU: 50m
    REQUEST_MEMORY: 50Mi
    PROMETHEUS_ENABLED: 'false'

